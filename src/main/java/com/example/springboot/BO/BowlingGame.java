package com.example.springboot.BO;

import java.util.HashMap;
import java.util.Map;
import java.util.Random;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

public class BowlingGame {
    private int curPinsStanding;
    private String curScoreSheet;
    //hashMap will have score and scoreCard values for nill spaire and strike
    private HashMap<Integer, String> scoreHash = new HashMap<>();
    //the amount extra hash lets you skip an if statement when determining how many points you would need to add the extra points from a strike or a spaire
    private HashMap<String, Integer> amountExtraHash = new HashMap<>();

    private static final Logger log = LogManager.getLogger(BowlingGame.class);

    public BowlingGame(){
        curScoreSheet="";
        scoreHash.putAll(Map.of(0,"-",10,"X"));
        amountExtraHash.putAll(Map.of("X",2,"/",1));
    }

    public void throwBall(int curFrame, int curBall, int pinsHit){
        if(curBall==0){curPinsStanding = 10;}
        curPinsStanding = curPinsStanding-pinsHit;
        //add to score card
        if(pinsHit == 0 || (pinsHit == 10 && curBall == 0)){
            curScoreSheet+= scoreHash.get(pinsHit);
        }
        else if(curPinsStanding == 0){
            curScoreSheet +="/"; 
        }
        else{
            curScoreSheet +=pinsHit;
        }
    }
    public String getScoreSheet(){
        return curScoreSheet;
    }
    //returns the score, which is generated by iterating through the current score sheet.
    public int getScore(){
        int score = 0;
        for(int i = 0; i< curScoreSheet.length();i++){
            char curChar = curScoreSheet.charAt(i);
            if(curChar == 'X' || curChar == '/'){
                score += getPoints(i);
                log.info("points after scoring base points: {}", score);
                score += addExtraPointsForStrikesAndSpares(i, amountExtraHash.get(Character.toString(curChar)));
                log.info("points after scoring extra points: {}", score);
            }
            else{ score += getPoints(i);}
        }
        return score;   
    }
    //addsExtraPoints that would be rewarded for hitting a strike or a spare
    private int addExtraPointsForStrikesAndSpares(int i, int amountExtra){
        int points = 0;
        int l = i+1;
                while(l<curScoreSheet.length() && l<= i+amountExtra){
                    points+=getPoints(l);
                    l++;
                }
        return points;
    }
    //gets Points associated with the char value at a specific index of the score sheet.
    private int getPoints(int i){
        int points = 0;
        char curChar = curScoreSheet.charAt(i);
        String converterString = "";
        if(curChar == 'X'){points+=10;}
        else if(curChar == '/'){
            points += 10 - getPoints(i-1);
        }
        else if(curChar != '-'){
            points+= Integer.valueOf(converterString + curScoreSheet.charAt(i));
        }
        return points;
    }

    private int getPinsHit(int numOfPins){
        Random random = new Random();
        return random.nextInt(numOfPins);
    }


}
